version: '0.1'
services:
  # Public facing API
  fastapi:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "6000:80"
    networks:
      - tunnel
    env_file:
      - .env
    volumes:
      - om2data:/var/www/media
      - fastapi_code:/app
    depends_on:
      - postgres
    restart: always

  # For Exposing apis and file hosting to the internet
  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
    networks:
      - tunnel

  # Database
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_scripts:/docker-entrypoint-initdb.d 
    networks:
      - tunnel

  # Postgres admin - not for prod
  #pgadmin:
  #  image: dpage/pgadmin4
  #  environment:
  #    - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
  #    - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
  #  ports:
  #    - "5050:80"
  #  volumes:
  #    - pgadmin_data:/var/lib/pgadmin
  #  networks:
  #    - tunnel

  # File Processing
  chipmunk_processor:
    build:
      context: ./chipmunk_processor
      dockerfile: Dockerfile.dev
    volumes:
      - ./chipmunk_processor/app:/app
      - chipmunk_data:/chipmunk_data
      - om2data:/var/www/media
    networks:
      - tunnel
    env_file:
      - .env
    depends_on:
      - postgres
    restart: always

  # File Serving
  nginx:
    image: nginx:latest
    ports:
      - "9000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - om2data:/var/www/media
    networks:
      - tunnel

  # Admin Tools
  admin_tools:
    build:
      context: ./admin_tools
    volumes:
      - ./admin_tools/app:/app
      - admin_tools_data:/admin_tools_data
      - om2data:/var/www/media
    ports:
      - "10001:80"
    networks:
      - tunnel
    env_file:
      - .env
    depends_on:
      - postgres
    restart: always

  # Front end
  front_end:
    build:
      context: ../web/Orange-Music-2
    ports:
      - "11001:80"
    networks:
      - tunnel
    volumes:
    #  - ./templates:/etc/nginx/templates 
      - ./nginx-frontend.conf:/etc/nginx/templates/nginx.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR
      - API_DOMAIN=${API_DOMAIN}  
      - MEDIA_DOMAIN=${MEDIA_DOMAIN}  


networks:
  tunnel:
    driver: bridge

volumes:
  pgdata:
  pgadmin_data:
  om2data:
  fastapi_code:
    driver: local  # Use the local driver to map a local directory
    driver_opts:
      type: none
      o: bind
      device: /Users/Leo/Documents/programming/web/orange-music-2/src/apis  
  chipmunk_data:
  admin_tools_data:



